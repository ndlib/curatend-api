=begin
#CurateND Query API

#Prototype of the CurateND Query API. This is a work in progress. 

OpenAPI spec version: 0.0.0
Contact: curate@nd.edu
Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require "uri"

module SwaggerClient
  class BinaryFilesApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # This endpoint is used to retrieve the contents of a `file` object. Calling it on non-file objects will return a 404 error. The unversioned path will return the most current version.
    # 
    # @param id The opaque identifier (e.g Noid) of the object to retrieve
    # @param [Hash] opts the optional parameters
    # @return [File]
    def objects_id_content_get(id, opts = {})
      data, _status_code, _headers = objects_id_content_get_with_http_info(id, opts)
      return data
    end

    # This endpoint is used to retrieve the contents of a &#x60;file&#x60; object. Calling it on non-file objects will return a 404 error. The unversioned path will return the most current version.
    # 
    # @param id The opaque identifier (e.g Noid) of the object to retrieve
    # @param [Hash] opts the optional parameters
    # @return [Array<(File, Fixnum, Hash)>] File data, response status code and response headers
    def objects_id_content_get_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: BinaryFilesApi.objects_id_content_get ..."
      end
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling BinaryFilesApi.objects_id_content_get" if id.nil?
      # resource path
      local_var_path = "/objects/{id}/content".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['api_key']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'File')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: BinaryFilesApi#objects_id_content_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Return file metadata without the file payload
    # 
    # @param id The opaque identifier (e.g Noid) of the object to retrieve
    # @param id2 The opaque identifier (e.g Noid) of the object to retrieve
    # @param [Hash] opts the optional parameters
    # @return [Object]
    def objects_id_content_head(id, id2, opts = {})
      data, _status_code, _headers = objects_id_content_head_with_http_info(id, id2, opts)
      return data
    end

    # Return file metadata without the file payload
    # 
    # @param id The opaque identifier (e.g Noid) of the object to retrieve
    # @param id2 The opaque identifier (e.g Noid) of the object to retrieve
    # @param [Hash] opts the optional parameters
    # @return [Array<(Object, Fixnum, Hash)>] Object data, response status code and response headers
    def objects_id_content_head_with_http_info(id, id2, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: BinaryFilesApi.objects_id_content_head ..."
      end
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling BinaryFilesApi.objects_id_content_head" if id.nil?
      # verify the required parameter 'id2' is set
      fail ArgumentError, "Missing the required parameter 'id2' when calling BinaryFilesApi.objects_id_content_head" if id2.nil?
      # resource path
      local_var_path = "/objects/{id}/content".sub('{format}','json').sub('{' + 'id' + '}', id.to_s).sub('{' + 'id' + '}', id2.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['api_key']
      data, status_code, headers = @api_client.call_api(:HEAD, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Object')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: BinaryFilesApi#objects_id_content_head\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Returns the thumbnail image for a collection, work, or file. For a work the thumbnail returned is that of the work’s representative image.
    # 
    # @param id The opaque identifier (e.g Noid) of the object to retrieve
    # @param [Hash] opts the optional parameters
    # @return [File]
    def objects_id_thumbnail_get(id, opts = {})
      data, _status_code, _headers = objects_id_thumbnail_get_with_http_info(id, opts)
      return data
    end

    # Returns the thumbnail image for a collection, work, or file. For a work the thumbnail returned is that of the work’s representative image.
    # 
    # @param id The opaque identifier (e.g Noid) of the object to retrieve
    # @param [Hash] opts the optional parameters
    # @return [Array<(File, Fixnum, Hash)>] File data, response status code and response headers
    def objects_id_thumbnail_get_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: BinaryFilesApi.objects_id_thumbnail_get ..."
      end
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling BinaryFilesApi.objects_id_thumbnail_get" if id.nil?
      # resource path
      local_var_path = "/objects/{id}/thumbnail".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['api_key']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'File')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: BinaryFilesApi#objects_id_thumbnail_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Return thumbnail metadata without the file payload
    # 
    # @param id The opaque identifier (e.g Noid) of the object to retrieve
    # @param id2 The opaque identifier (e.g Noid) of the object to retrieve
    # @param [Hash] opts the optional parameters
    # @return [Object]
    def objects_id_thumbnail_head(id, id2, opts = {})
      data, _status_code, _headers = objects_id_thumbnail_head_with_http_info(id, id2, opts)
      return data
    end

    # Return thumbnail metadata without the file payload
    # 
    # @param id The opaque identifier (e.g Noid) of the object to retrieve
    # @param id2 The opaque identifier (e.g Noid) of the object to retrieve
    # @param [Hash] opts the optional parameters
    # @return [Array<(Object, Fixnum, Hash)>] Object data, response status code and response headers
    def objects_id_thumbnail_head_with_http_info(id, id2, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: BinaryFilesApi.objects_id_thumbnail_head ..."
      end
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling BinaryFilesApi.objects_id_thumbnail_head" if id.nil?
      # verify the required parameter 'id2' is set
      fail ArgumentError, "Missing the required parameter 'id2' when calling BinaryFilesApi.objects_id_thumbnail_head" if id2.nil?
      # resource path
      local_var_path = "/objects/{id}/thumbnail".sub('{format}','json').sub('{' + 'id' + '}', id.to_s).sub('{' + 'id' + '}', id2.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['api_key']
      data, status_code, headers = @api_client.call_api(:HEAD, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Object')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: BinaryFilesApi#objects_id_thumbnail_head\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
